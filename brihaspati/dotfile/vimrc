filetype plugin indent on    " required
set mouse=a
call plug#begin('~/.vim/plugged')
" Make sure you use single quotes
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'Shougo/unite.vim'
Plug 'Yggdroot/indentLine'
Plug 'wellle/context.vim'
Plug 'tpope/vim-fugitive'
Plug 'whatyouhide/vim-gotham'
Plug 'arcticicestudio/nord-vim'
Plug 'mhinz/vim-signify'

Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }

Plug 'bfrg/vim-cpp-modern'

Plug 'hari-rangarajan/CCTree'
Plug 'skywind3000/gutentags_plus'
Plug 'vivien/vim-linux-coding-style'
Plug 'majutsushi/tagbar'

Plug 'junegunn/fzf.vim'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }

Plug 'rhysd/git-messenger.vim'
Plug 'dag/vim-fish'
Plug 'rhysd/vim-grammarous'
Plug 'kamykn/spelunker.vim'
Plug 'dhananjaylatkar/cscope_maps.nvim' " cscope keymaps
Plug 'folke/which-key.nvim' " optional
Plug 'jacoborus/tender.vim'

Plug 'github/copilot.vim'
Plug 'rust-lang/rust.vim'

"Plug 'ycm-core/YouCompleteMe'
" Initialize plugin system
call plug#end()

"
"'kamykn/spelunker.vim'
set nospell
let $NVIM_TUI_ENABLE_TRUE_COLOR=1
let g:spelunker_highlight_type = 1
" Option to disable word checking.
" Disable URI checking. (default: 0)
let g:spelunker_disable_uri_checking = 1
" end 'kamykn/spelunker.vim'

" IMPORTANT: :help Ncm2PopupOpen for more information
set completeopt=noinsert,menuone,noselect

" Required for operations modifying multiple buffers like rename.
set hidden
"omni completion freeze
let g:tsuquyomi_use_vimproc=1
"popup menu color
highlight Pmenu ctermbg=gray guibg=gray
"transparent
highlight Normal ctermbg=none
highlight NonText ctermbg=none

set showtabline=2
let g:airline#extensions#branch#enabled = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1

let g:indentLine_color_term = 239
let g:indentLine_color_gui = '#504945'
"let g:indentLine_char_list = ['|', '¦', '┆', '┊']
let g:indentLine_char = '┊'
"let g:indentLine_concealcursor = 'niv'
"let g:indentLine_conceallevel = 2
let g:indentLine_fileTypeExclude = ['help', 'man', 'json']

" enable gtags module
let g:gutentags_modules = ['ctags', 'gtags_cscope']
" generate datebases in my cache directory, prevent gtags files polluting my project
let g:gutentags_cache_dir = expand('~/.cache/tags')

" change focus to quickfix window after search (optional).
let g:gutentags_plus_switch = 1

let g:rustfmt_autosave = 1

colorscheme tender
"hi Comment cterm=italic
" Disable function highlighting (affects both C and C++ files)
let g:cpp_function_highlight = 0

" Enable highlighting of C++11 attributes
let g:cpp_attributes_highlight = 1

" Highlight struct/class member variables (affects both C and C++ files)
let g:cpp_member_highlight = 1

" Put all standard C and C++ keywords under Vim's highlight group 'Statement'
" (affects both C and C++ files)
let g:cpp_simple_highlight = 1

set autoindent smartindent              " turn on auto/smart indenting
set smarttab                            " make <tab> and <backspace> smarter
set backspace=eol,start,indent          " allow backspacing over indent, eol, & start
let g:linuxsty_patterns = [ "/usr/src/", "/linux", "/home/nirmoy/devel/linux/linux/"]

autocmd BufWritePre * %s/\s\+$//e
"remember prev cursor
autocmd BufReadPost * if @% !~# '\.git[\/\\]COMMIT_EDITMSG$' && line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g`\"" | endif

nmap <F8> :TagbarToggle<CR>

set tags=tags,./tags;
set hlsearch
set noswapfile
set laststatus=2

set undodir=~/.vimundo
set undofile
set wildmenu
set encoding=utf-8
augroup highlight_yank
    autocmd!
    autocmd TextYankPost * silent! lua require'vim.highlight'.on_yank("IncSearch", 1000)
augroup END
