filetype plugin indent on    " required
set mouse=a
call plug#begin('~/.vim/plugged')
" Make sure you use single quotes
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'Shougo/vimfiler.vim'
Plug 'Shougo/unite.vim'
Plug 'Yggdroot/indentLine'
Plug 'srstevenson/vim-picker'
Plug 'haya14busa/incsearch.vim'
Plug 'wellle/context.vim'
Plug 'slim-template/vim-slim'
Plug 'tpope/vim-fugitive'
"Plug 'liuchengxu/space-vim-dark'
Plug 'whatyouhide/vim-gotham'
Plug 'arcticicestudio/nord-vim'
"Plug 'mswift42/vim-themes'
"Plug 'rainglow/vim'
Plug 'mhinz/vim-signify'
Plug 'tpope/vim-rhubarb'

Plug 'mhinz/vim-startify'
Plug 'hari-rangarajan/CCTree'
Plug 'vivien/vim-linux-coding-style'
Plug 'majutsushi/tagbar'

Plug 'junegunn/fzf.vim'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }

Plug 'rust-lang/rust.vim'

Plug 'dense-analysis/ale'
Plug 'ncm2/ncm2'
Plug 'roxma/nvim-yarp'
Plug 'ncm2/ncm2-bufword'
Plug 'ncm2/ncm2-path'
Plug 'autozimu/LanguageClient-neovim', {
    \ 'branch': 'next',
    \ 'do': 'bash install.sh',
    \ }
Plug 'liuchengxu/vista.vim'
Plug 'rhysd/git-messenger.vim'
Plug 'dag/vim-fish'
Plug 'rhysd/vim-grammarous'

" Initialize plugin system
call plug#end()

" enable ncm2 for all buffers
autocmd BufEnter * call ncm2#enable_for_buffer()

" IMPORTANT: :help Ncm2PopupOpen for more information
set completeopt=noinsert,menuone,noselect

" Required for operations modifying multiple buffers like rename.
set hidden

let g:LanguageClient_serverCommands = {
    \ 'rust': ['~/.cargo/bin/rustup', 'run', 'stable', 'rls'],
    \ 'python': ['/usr/local/bin/pyls'],
    \ }
let g:LanguageClient_diagnosticsSignsMax=0
let g:LanguageClient_diagnosticsEnable=1
let g:LanguageClient_diagnosticsList="Quickfix"
nnoremap <F5> :call LanguageClient_contextMenu()<CR>
" Or map each action separately
nnoremap <silent> K :call LanguageClient#textDocument_hover()<CR>
nnoremap <silent> gd :call LanguageClient#textDocument_definition()<CR>
"popup menu color
highlight Pmenu ctermbg=gray guibg=gray

let g:startify_lists = [
	\ { 'type': 'dir',       'header': ['   Most Recently Used Files '. getcwd()] },
	\ { 'type': 'files',     'header': ['   Most Recently Used Files']            },
	\ { 'type': 'sessions',  'header': ['   Sessions']       },
	\ { 'type': 'bookmarks', 'header': ['   Bookmarks']      },
	\ { 'type': 'commands',  'header': ['   Commands']       },
	\ ]
let g:startify_enable_special      = 0
let g:startify_files_number        = 8
let g:startify_relative_path       = 1
"let g:startify_change_to_dir       = 0
"let g:startify_update_oldfiles     = 1
"let g:startify_session_autoload    = 1
"let g:startify_session_persistence = 1

let g:startify_skiplist = [
	\ 'COMMIT_EDITMSG',
        \ 'bundle/.*/doc',
        \ '/data/repo/neovim/runtime/doc',
        \ '/Users/mhi/local/vim/share/vim/vim74/doc',
        \ ]

let g:startify_bookmarks = [
        \ { 'c': '~/.vimrc' },
        \ ]

let g:startify_custom_header =
	\ startify#pad(split(system('task|boxed'), '\n'))
let g:startify_custom_footer =
	\ ['', "   Vim is charityware. Please read ':help uganda'.", '']

hi StartifyBracket ctermfg=240
hi StartifyFile    ctermfg=147
hi StartifyFooter  ctermfg=240
hi StartifyHeader  ctermfg=114
hi StartifyNumber  ctermfg=215
hi StartifyPath    ctermfg=245
hi StartifySlash   ctermfg=240
hi StartifySpecial ctermfg=240

"vimfiler settings
let g:vimfiler_as_default_explorer = 1
call vimfiler#custom#profile('default', 'context',{'direction' : 'rightbelow'})
autocmd VimEnter *
	\   if !argc()
	\ |   Startify
        \ |   VimFilerExplorer
        \ |   wincmd w
        \ | endif

set showtabline=2
let g:airline#extensions#branch#enabled = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1

let g:indentLine_color_term = 239
let g:indentLine_color_gui = '#504945'
"let g:indentLine_char_list = ['|', '¦', '┆', '┊']
let g:indentLine_char = '┊'
"let g:indentLine_concealcursor = 'niv'
"let g:indentLine_conceallevel = 2
let g:indentLine_fileTypeExclude = ['help', 'man', 'startify', 'vimfiler', 'json']

let g:ale_completion_enabled = 1


colorscheme gotham256
hi Comment cterm=italic

set autoindent smartindent              " turn on auto/smart indenting
set smarttab                            " make <tab> and <backspace> smarter
set backspace=eol,start,indent          " allow backspacing over indent, eol, & start
let g:linuxsty_patterns = [ "/usr/src/", "/linux", "/home/nirmoy/devel/linux/linux/"]

autocmd BufWritePre * %s/\s\+$//e
"remember prev cursor
autocmd BufReadPost * if @% !~# '\.git[\/\\]COMMIT_EDITMSG$' && line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g`\"" | endif

nmap <F8> :TagbarToggle<CR>

set tags=tags,./tags;
set hlsearch
set noswapfile
set laststatus=2

set undodir=~/.vimundo
set undofile
set wildmenu

augroup highlight_yank
    autocmd!
    autocmd TextYankPost * silent! lua require'vim.highlight'.on_yank("IncSearch", 1000)
augroup END
